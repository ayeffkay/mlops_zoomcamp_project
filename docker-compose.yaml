version: "3.9"

services:
  localstack:
    container_name: localstack
    image: localstack/localstack
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    env_file:
      - ./docker_env/aws_credentials.env
      - ./docker_env/localstack.env
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - default
  db:
    image: postgres
    container_name: postgres
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.postgres
    ports:
      - "5432:5432"
    env_file:
      - ./docker_env/postgres.env
    networks:
      - default
  mlflow:
    depends_on:
      - localstack
      - db
    container_name: mlflow
    image: mlflow:v1.0.0
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.mlflow
    expose:
      - "5001"
    ports:
      - "5001:5001"
    env_file:
      - ./docker_env/aws_credentials.env
      - ./docker_env/postgres.env
      - ./docker_env/mlflow.env
    entrypoint: /bin/sh -c "/scripts/run_mlflow.sh"
    networks:
      - default
  audioprocessor_dev:
    depends_on:
      - localstack
      - mlflow
    container_name: audioprocessor_dev
    image: audioprocessor_dev:v1.0.0
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.audio
    ports:
      - "8080:8080"
    env_file:
      - ./docker_env/aws_credentials.env
      - ./docker_env/audio_processor.env
      - ./docker_env/prefect.env
      - ./docker_env/mlflow.env
    working_dir: /root/src
    entrypoint: prefect agent start --pool mlops-zoomcamp
    volumes:
      - "./src:/root/src"
      - "./docker_makefiles/Makefile_audioprocessor:/root/src/Makefile"
      - "./data/raw/genres_original_subset:/data/raw/train_valid_subset"
      - "./data/raw/genres_original:/data/raw/train_valid"
      - "./data/raw/genres_original_eval:/data/raw/test"
      - "./data/processed:/data/processed"
      - "./data/artifacts:/data/artifacts"
    networks:
      - default
  grafana:
    depends_on:
      - prometheus
      - db
    image: grafana/grafana:10.0.3-ubuntu
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./configs/grafana_datasources.yaml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
      - ./configs/grafana_dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
      - ./dashboards:/opt/grafana/dashboards
    networks:
      - default
  prometheus:
    image: prom/prometheus:v2.46.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./configs/prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./prometheus:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - default
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - default
  audioprocessor_server:
    depends_on:
    - db
    - localstack
    image: audioprocessor_server:v1.0.0
    container_name: audioprocessor_server
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.tritonserver
    env_file:
      - ./docker_env/tritonserver.env
      - ./docker_env/aws_credentials.env
      - ./docker_env/postgres.env
    working_dir: /workspace
    volumes:
      - "./src/deploy/triton_models:/models"
      - "./src/preprocessing/audio.py:/models/pre_processor_1/1/preprocessing/audio.py"
      - "./src/preprocessing/feature_extractor.py:/models/pre_processor_1/1/preprocessing/feature_extractor.py"
      - "./src/preprocessing/utils.py:/models/pre_processor_1/1/preprocessing/utils.py"
      - "./src/preprocessing/configs:/models/pre_processor_1/1/preprocessing/configs"
      - "./src/preprocessing/utils.py:/models/predictor_1/1/preprocessing/utils.py"
      - "./src/preprocessing/utils.py:/models/predictor_2/1/preprocessing/utils.py"
      - "./src/monitoring:/models/predictor_1/1/monitoring"
      - "./src/preprocessing/utils.py:/models/post_processor_1/1/preprocessing/utils.py"
      - "./docker_makefiles/Makefile_tritonserver:/workspace/Makefile"
    entrypoint: tail -f /dev/null
    shm_size: 1g
    networks:
      - default
  audioprocessor_client:
    depends_on:
      - localstack
    image: audio_processor_client:v1.0.0
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.tritonclient
    container_name: audioprocessor_client
    entrypoint: tail -f /dev/null
    shm_size: 1g
    working_dir: /client
    volumes:
      - "./src/deploy/client/:/client"
      - "./src/preprocessing/utils.py:/client/preprocessing/utils.py"
      - "./data/raw/genres_original_eval:/data/raw"
      - "./data/raw/random_data_cut:/data/random"
      - "./docker_makefiles/Makefile_tritonclient:/client/Makefile"
    networks:
      - default
    environment:
      - PYTHONPATH=/client
    env_file:
    - ./docker_env/aws_credentials.env

volumes:
  prometheus_data: {}

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16