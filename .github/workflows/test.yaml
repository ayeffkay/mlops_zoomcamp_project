name: build

on:
  push:
    branches: [ develop ]
    tags:
      - 'v*'
jobs:
  build_conda_pack:
    runs-on: ubuntu-20.04
    outputs:
      output1: ${{ steps.build_conda_pack.outputs.CONDA_FILE }}
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: docker_hub_login
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: extract_docker_metadata
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ayeffkay/mlops_zoomcamp_project
        tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
    - name: build_conda_pack
      uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      id: conda
      with:
        context: src/deploy/conda-pack
        file: src/deploy/conda-pack/Dockerfile.condapack
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
      run: |
        echo "CONDA_FILE=`find . -type f -name 'conda-pack.tar.gz'`" >> $GITHUB_OUTPUT
    - name: publish
      uses: actions/upload-artifact@v3
      with:
          name: conda-pack
          path: ${{ steps.conda.outputs.CONDA_FILE }}
          retention-days: "2"
  run_unit_tests:
    runs-on: ubuntu-20.04
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: install_python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8.10'
    - name: setup
      run: |
          sudo apt-get install -y ffmpeg make ca-certificates curl gnupg
          pip install -r requirements.txt
    - name: unit_tests
      run: make unit_tests
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
